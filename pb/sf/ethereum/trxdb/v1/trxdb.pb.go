// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: sf/ethereum/trxdb/v1/trxdb.proto

package pbtrxdb

import (
	v1 "github.com/chainstack/sf-ethereum/pb/sf/ethereum/codec/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrxTraceRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxTrace    *v1.TransactionTrace `protobuf:"bytes,1,opt,name=trx_trace,json=trxTrace,proto3" json:"trx_trace,omitempty"`
	BlockHeader *v1.BlockHeader      `protobuf:"bytes,2,opt,name=block_header,json=blockHeader,proto3" json:"block_header,omitempty"`
}

func (x *TrxTraceRow) Reset() {
	*x = TrxTraceRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_ethereum_trxdb_v1_trxdb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrxTraceRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrxTraceRow) ProtoMessage() {}

func (x *TrxTraceRow) ProtoReflect() protoreflect.Message {
	mi := &file_sf_ethereum_trxdb_v1_trxdb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrxTraceRow.ProtoReflect.Descriptor instead.
func (*TrxTraceRow) Descriptor() ([]byte, []int) {
	return file_sf_ethereum_trxdb_v1_trxdb_proto_rawDescGZIP(), []int{0}
}

func (x *TrxTraceRow) GetTrxTrace() *v1.TransactionTrace {
	if x != nil {
		return x.TrxTrace
	}
	return nil
}

func (x *TrxTraceRow) GetBlockHeader() *v1.BlockHeader {
	if x != nil {
		return x.BlockHeader
	}
	return nil
}

type BlockRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block     *v1.Block           `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	TraceRefs *v1.TransactionRefs `protobuf:"bytes,2,opt,name=trace_refs,json=traceRefs,proto3" json:"trace_refs,omitempty"`
}

func (x *BlockRow) Reset() {
	*x = BlockRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_ethereum_trxdb_v1_trxdb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRow) ProtoMessage() {}

func (x *BlockRow) ProtoReflect() protoreflect.Message {
	mi := &file_sf_ethereum_trxdb_v1_trxdb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRow.ProtoReflect.Descriptor instead.
func (*BlockRow) Descriptor() ([]byte, []int) {
	return file_sf_ethereum_trxdb_v1_trxdb_proto_rawDescGZIP(), []int{1}
}

func (x *BlockRow) GetBlock() *v1.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *BlockRow) GetTraceRefs() *v1.TransactionRefs {
	if x != nil {
		return x.TraceRefs
	}
	return nil
}

var File_sf_ethereum_trxdb_v1_trxdb_proto protoreflect.FileDescriptor

var file_sf_ethereum_trxdb_v1_trxdb_proto_rawDesc = []byte{
	0x0a, 0x20, 0x73, 0x66, 0x2f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2f, 0x74, 0x72,
	0x78, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x78, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x73, 0x66, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e,
	0x74, 0x72, 0x78, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x73, 0x66, 0x2f, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x64, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x54,
	0x72, 0x78, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x43, 0x0a, 0x09, 0x74, 0x72,
	0x78, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x73, 0x66, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x08, 0x74, 0x72, 0x78, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12,
	0x44, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x66, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x6f, 0x77, 0x12, 0x31, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x66, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x44, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x66, 0x2e, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x73,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x66, 0x73, 0x42, 0x4b, 0x5a, 0x49, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x66, 0x61, 0x73, 0x74, 0x2f, 0x73, 0x66, 0x2d, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x2d, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x66, 0x2f, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2f, 0x74, 0x72, 0x78, 0x64, 0x62, 0x2f, 0x76, 0x31,
	0x3b, 0x70, 0x62, 0x74, 0x72, 0x78, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sf_ethereum_trxdb_v1_trxdb_proto_rawDescOnce sync.Once
	file_sf_ethereum_trxdb_v1_trxdb_proto_rawDescData = file_sf_ethereum_trxdb_v1_trxdb_proto_rawDesc
)

func file_sf_ethereum_trxdb_v1_trxdb_proto_rawDescGZIP() []byte {
	file_sf_ethereum_trxdb_v1_trxdb_proto_rawDescOnce.Do(func() {
		file_sf_ethereum_trxdb_v1_trxdb_proto_rawDescData = protoimpl.X.CompressGZIP(file_sf_ethereum_trxdb_v1_trxdb_proto_rawDescData)
	})
	return file_sf_ethereum_trxdb_v1_trxdb_proto_rawDescData
}

var file_sf_ethereum_trxdb_v1_trxdb_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sf_ethereum_trxdb_v1_trxdb_proto_goTypes = []interface{}{
	(*TrxTraceRow)(nil),         // 0: sf.ethereum.trxdb.v1.TrxTraceRow
	(*BlockRow)(nil),            // 1: sf.ethereum.trxdb.v1.BlockRow
	(*v1.TransactionTrace)(nil), // 2: sf.ethereum.codec.v1.TransactionTrace
	(*v1.BlockHeader)(nil),      // 3: sf.ethereum.codec.v1.BlockHeader
	(*v1.Block)(nil),            // 4: sf.ethereum.codec.v1.Block
	(*v1.TransactionRefs)(nil),  // 5: sf.ethereum.codec.v1.TransactionRefs
}
var file_sf_ethereum_trxdb_v1_trxdb_proto_depIdxs = []int32{
	2, // 0: sf.ethereum.trxdb.v1.TrxTraceRow.trx_trace:type_name -> sf.ethereum.codec.v1.TransactionTrace
	3, // 1: sf.ethereum.trxdb.v1.TrxTraceRow.block_header:type_name -> sf.ethereum.codec.v1.BlockHeader
	4, // 2: sf.ethereum.trxdb.v1.BlockRow.block:type_name -> sf.ethereum.codec.v1.Block
	5, // 3: sf.ethereum.trxdb.v1.BlockRow.trace_refs:type_name -> sf.ethereum.codec.v1.TransactionRefs
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_sf_ethereum_trxdb_v1_trxdb_proto_init() }
func file_sf_ethereum_trxdb_v1_trxdb_proto_init() {
	if File_sf_ethereum_trxdb_v1_trxdb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sf_ethereum_trxdb_v1_trxdb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrxTraceRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_ethereum_trxdb_v1_trxdb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sf_ethereum_trxdb_v1_trxdb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sf_ethereum_trxdb_v1_trxdb_proto_goTypes,
		DependencyIndexes: file_sf_ethereum_trxdb_v1_trxdb_proto_depIdxs,
		MessageInfos:      file_sf_ethereum_trxdb_v1_trxdb_proto_msgTypes,
	}.Build()
	File_sf_ethereum_trxdb_v1_trxdb_proto = out.File
	file_sf_ethereum_trxdb_v1_trxdb_proto_rawDesc = nil
	file_sf_ethereum_trxdb_v1_trxdb_proto_goTypes = nil
	file_sf_ethereum_trxdb_v1_trxdb_proto_depIdxs = nil
}
